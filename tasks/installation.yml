---
# tasks file for sap-preconfigure: installation

- name: Assert - Gather facts about installed packages
  package_facts:
    manager: auto

- name: Find out if there are outstanding package updates
  command: yum check-update
  register: yum_check_update_result
  args:
    warn: false
  changed_when: false
#  ignore_errors: "{{ sap_preconfigure_assert_ignore_errors|d(false) }}"
# We should better always ignore errors:
  ignore_errors: yes

- name: Assert that there are no more outstanding package updates
  assert:
    that:
      - yum_check_update_result.rc == 0
    fail_msg: "FAIL: System needs to be updated!"
    success_msg: "PASS: There are no more outstanding package updates."
  ignore_errors: "{{ sap_preconfigure_assert_ignore_errors|d(false) }}"
  when: sap_preconfigure_assert_update == true

- name: Check if required packages are installed
  shell: yum info installed {{ __sap_preconfigure_assert_packages | map('quote') | join(' ') }} | awk '/Name/{n=$NF}/Version/{v=$NF}/Release/{r=$NF}/Description/{printf ("%s\n", n)}'
  register: yum_result
  changed_when: no
  args:
    warn: false

- name: Assert that all required packages are installed
  assert:
    that:
      - "'{{ line_item }}' in yum_result.stdout_lines"
    fail_msg: "FAIL: Package {{ line_item }} is not installed!"
    success_msg: "PASS: Package {{ line_item }} is installed."
  with_items:
    - "{{ __sap_preconfigure_assert_packages }}"
  loop_control:
    loop_var: line_item
  ignore_errors: "{{ sap_preconfigure_assert_ignore_errors|d(false) }}"

- set_fact:
    needs_restarting_command: "needs-restarting -r"
  when:
    - ansible_os_family == 'RedHat'
    - ansible_distribution_major_version == '7'

- set_fact:
    needs_restarting_command: "yum needs-restarting -r"
  when:
    - ansible_os_family == 'RedHat'
    - ansible_distribution_major_version == '8'

- name: Check if system needs to be restarted
  command: "{{ needs_restarting_command }}"
  register: needs_restarting_result
  changed_when: false
  args:
    warn: false
  check_mode: false
  ignore_errors: "{{ sap_preconfigure_assert_ignore_errors|d(false) }}"

#- name: Call Reboot handler if necessary
#  command: /bin/true
#  notify: "Reboot handler"
#  when: needs_restarting_result.rc == 1

...
